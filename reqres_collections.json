{
	"info": {
		"_postman_id": "462a52a7-2f9b-469d-a2c8-4e5216c31e2b",
		"name": "api-test-wisnu-munawar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13715158"
	},
	"item": [
		{
			"name": "reqres",
			"item": [
				{
					"name": "Get list user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"API should return response 200 OK\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									"pm.test(\"API should return body page\",() => {",
									"  pm.expect(pm.response.text()).to.include(\"xyz\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list user with parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Success get list user with Status code 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users?page=2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list user with invalid parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed get list user with Status code 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users?pagezzzzzzzzzzzzzzzz=xx",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "pagezzzzzzzzzzzzzzzz",
									"value": "xx"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list user exceeds total pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed get list user with Status code 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users?page=3",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single user with user id 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Success get user with Status code 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single user with invalid path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed get user with Status code 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/xxxx",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"xxxx"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get unregistered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed get user with Status code 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/50",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"50"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Success create new user with Status code 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Wisnu\",\n    \"job\": \"QA Id\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new user with invalid request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed create new user with Status code 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nama saya adalah\": \"Wisnu\",\n    \"pekerjaan saya adalah\": \"QA Id\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Success update user with Status code 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"wisnu munawar\",\n    \"job\": \"quality engineer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update unregistered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed get user with Status code 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"wisnu munawar\",\n    \"job\": \"quality engineer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/50",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"50"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user with invalid request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed update user with Status code 400\", () => {",
									"  pm.expect(pm.response.code).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nama saya\": \"wisnu munawar\",\n    \"pekerjaan saya\": \"quality engineer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Success delete user with Status code 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete unregistered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//test",
									"pm.test(\"Failed delete user with Status code 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/50",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"50"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list user - 2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Wisnu Munawar\",\n    \"job\": \"QA E\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Wisnu Edit\",\n    \"job\": \"QA E E E\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user without json data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "swapi",
			"item": [
				{
					"name": "get list people",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/people",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"people"
							]
						}
					},
					"response": []
				},
				{
					"name": "get people",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/people/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"people",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get starship",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/starships/12",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"starships",
								"12"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "newsapi",
			"item": [
				{
					"name": "get article about tesla",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/v2/everything?q=tesla&apiKey=a31dca5bb10d44c7a284e8b38511bce4",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v2",
								"everything"
							],
							"query": [
								{
									"key": "q",
									"value": "tesla"
								},
								{
									"key": "apiKey",
									"value": "a31dca5bb10d44c7a284e8b38511bce4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get article about apple",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/v2/everything?q=apple&apiKey=a31dca5bb10d44c7a284e8b38511bce4",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v2",
								"everything"
							],
							"query": [
								{
									"key": "q",
									"value": "apple"
								},
								{
									"key": "apiKey",
									"value": "a31dca5bb10d44c7a284e8b38511bce4"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}